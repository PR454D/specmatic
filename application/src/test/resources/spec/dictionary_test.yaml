openapi: '3.0.3'
info:
  title: Sample API
  version: '1.0'
paths:
  /base:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Base'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseArray'
  /nested:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Nested'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Nested'
  /oneOf:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OneOfSchema'
      responses:
        '200':
          description: OK
  /allOf:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AllOfSchema'
      responses:
        '200':
          description: OK
components:
  schemas:
    Base:
      type: object
      properties:
        id:
          type: integer
        type:
          type: string
        terms:
          type: array
          items:
            type: string
      required:
        - id
    BaseArray:
      type: array
      items:
        $ref: '#/components/schemas/Base'
    Nested:
      type: object
      properties:
        type:
          type: string
        base:
          $ref: '#/components/schemas/Base'
        details:
          type: object
          properties:
            price:
              type: number
            description:
              type: array
              items:
                type: string
      required:
        - id
    OneOfSchema:
      oneOf:
        - $ref: '#/components/schemas/Nested'
        - $ref: '#/components/schemas/Base'
      discriminator:
        propertyName: type
        mapping:
          Nested: '#/components/schemas/Nested'
          Base: '#/components/schemas/Base'
    AllOfSchema:
      allOf:
        - $ref: '#/components/schemas/Nested'
        - $ref: '#/components/schemas/Base'
      discriminator:
        propertyName: type
        mapping:
          AllOf: '#/components/schemas/AllOfSchema'